package org.sindicato.entities;
// Generated 03-dic-2015 16:29:24 by Hibernate Tools 4.3.1


import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * Registracion generated by hbm2java
 */
@Entity
@Table(name="registracion"
    ,schema="public"
    , uniqueConstraints = @UniqueConstraint(columnNames="email") 
)
public class Registracion  implements java.io.Serializable {


     private String idUsuario;
     private Usuario usuarioByEmail;
     private Usuario usuarioById;
     private Boolean completo;
     private String token;
     private Date fechaCreacion;
     private Date fechaUltimaModificacion;

    public Registracion() {
    }

	
    public Registracion(Usuario usuarioByEmail, Usuario usuarioById, Date fechaCreacion, Date fechaUltimaModificacion) {
        this.usuarioByEmail = usuarioByEmail;
        this.usuarioById = usuarioById;
        this.fechaCreacion = fechaCreacion;
        this.fechaUltimaModificacion = fechaUltimaModificacion;
    }
    public Registracion(Usuario usuarioByEmail, Usuario usuarioById, Boolean completo, String token, Date fechaCreacion, Date fechaUltimaModificacion) {
       this.usuarioByEmail = usuarioByEmail;
       this.usuarioById = usuarioById;
       this.completo = completo;
       this.token = token;
       this.fechaCreacion = fechaCreacion;
       this.fechaUltimaModificacion = fechaUltimaModificacion;
    }
   
     @GenericGenerator(name="generator", strategy="foreign", parameters=@Parameter(name="property", value="usuarioById"))@Id @GeneratedValue(generator="generator")

    
    @Column(name="id_usuario", unique=true, nullable=false, length=32)
    public String getIdUsuario() {
        return this.idUsuario;
    }
    
    public void setIdUsuario(String idUsuario) {
        this.idUsuario = idUsuario;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="email", unique=true, nullable=false)
    public Usuario getUsuarioByEmail() {
        return this.usuarioByEmail;
    }
    
    public void setUsuarioByEmail(Usuario usuarioByEmail) {
        this.usuarioByEmail = usuarioByEmail;
    }

@OneToOne(fetch=FetchType.LAZY)@PrimaryKeyJoinColumn
    public Usuario getUsuarioById() {
        return this.usuarioById;
    }
    
    public void setUsuarioById(Usuario usuarioById) {
        this.usuarioById = usuarioById;
    }

    
    @Column(name="completo")
    public Boolean getCompleto() {
        return this.completo;
    }
    
    public void setCompleto(Boolean completo) {
        this.completo = completo;
    }

    
    @Column(name="token", length=32)
    public String getToken() {
        return this.token;
    }
    
    public void setToken(String token) {
        this.token = token;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="fecha_creacion", nullable=false, length=35)
    public Date getFechaCreacion() {
        return this.fechaCreacion;
    }
    
    public void setFechaCreacion(Date fechaCreacion) {
        this.fechaCreacion = fechaCreacion;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="fecha_ultima_modificacion", nullable=false, length=35)
    public Date getFechaUltimaModificacion() {
        return this.fechaUltimaModificacion;
    }
    
    public void setFechaUltimaModificacion(Date fechaUltimaModificacion) {
        this.fechaUltimaModificacion = fechaUltimaModificacion;
    }




}


